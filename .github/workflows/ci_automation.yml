# much of this inspired from: https://cristianadam.eu/20191222/using-github-actions-with-c-plus-plus-and-cmake/
# and also the excellent series from:
# https://www.edwardthomson.com/blog/github_actions_advent_calendar.html
name: CI action for wxUI tests

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:
    branches:
    - main

jobs:

  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run clang-format style check for C/C++/Protobuf programs.
      uses: jidicula/clang-format-action@v4.8.0
      with:
        clang-format-version: '13'
        check-path: 'src'
        fallback-style: 'Mozilla' # optional

  copyright-check:
    name: Copyright Check
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: check
      run: ${{github.workspace}}/checklists/check_copyright

    - name: check
      run: ${{github.workspace}}/checklists/check_md

  build:
    name: ${{ matrix.config.name }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "macOS Latest Clang",
            os: macos-latest,
          }
        # disable these configurations until we've worked out the details. issue #11 
        - {
           name: "Ubuntu Latest GCC",
           os: ubuntu-latest,
         }
        # disable these configurations until we've worked out the details. issue #10 
        - {
           name: "Windows Latest MSVC",
           os: windows-latest,
         }
        build_type: [Debug, Release]

    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: Checkout unshallow
      run: git fetch --unshallow

    - name: Installing Xcode (MacOS)
      if: matrix.config.os == 'macos-latest'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.4'

    - name: Installing Dependencies (MacOS)
      if: matrix.config.os == 'macos-latest'
      continue-on-error: true
      run: |
        echo Doing Python3.11.6_1 woraround due to problems with linking.  The python steps may be removable in the future
        brew install python@3.11 || echo Step failed, continuing.
        brew link --overwrite python@3.11
        
    - name: Installing Dependencies (Linux)
      if: matrix.config.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install build-essential libgtk-3-dev freeglut3-dev; gcc -v

    # - name: Installing Dependencies (Windows)
    #   if: matrix.config.os == 'windows-latest'

    - name: Updating to gcc 14 (Linux)
      if: matrix.config.os == 'ubuntu-latest'
      run: |
        sudo apt install gcc-14 g++-14
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 100 --slave /usr/bin/g++ g++ /usr/bin/g++-14 --slave /usr/bin/gcov gcov /usr/bin/gcov-14
        sudo update-alternatives --set gcc /usr/bin/gcc-14

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DWXUI_WITH_TESTS=1 -DWXUI_WITH_EXAMPLE=1
 
    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

    - name: Run tests
      if: matrix.config.os == 'macos-latest'
      run: ctest --test-dir ${{github.workspace}}/build -C ${{matrix.build_type}}--output-on-failure

    - name: Output Test Log on Failure
      if: failure()
      run: cat ${{ github.workspace }}/build/Testing/Temporary/LastTest.log

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [formatting-check, copyright-check, build]
    if: always()
    steps:
      - name: Check matrix success
        run: |
          if [ "${{ needs.build.result }}" != "success" ]; then
            echo "Some matrix jobs failed"
            exit 1
          fi

  release:
    if: contains(github.ref, 'tags/v')
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: checkout
      uses: actions/checkout@v3

      # using https://github.com/ncipollo/release-action
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        bodyFile: ./LATEST_RELEASE_NOTES.md
        draft: true
        token: ${{ secrets.GITHUB_TOKEN }}
